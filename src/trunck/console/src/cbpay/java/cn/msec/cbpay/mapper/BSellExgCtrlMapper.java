package cn.msec.cbpay.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import cn.msec.cbpay.entity.BSellExgCtrl;
import cn.msec.cbpay.entity.BSellExgCtrlExample;
import cn.msec.cbpay.entity.BSellExgCtrlKey;
import cn.msec.ojpa.msc.mysql.StaticTableDaoSupport;

public interface BSellExgCtrlMapper extends StaticTableDaoSupport<BSellExgCtrl, BSellExgCtrlExample, BSellExgCtrlKey> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_SELL_EXG_CTRL
     *
     * @mbggenerated Thu May 05 14:51:53 CST 2016
     */
    @SelectProvider(type=BSellExgCtrlSqlProvider.class, method="countByExample")
    int countByExample(BSellExgCtrlExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_SELL_EXG_CTRL
     *
     * @mbggenerated Thu May 05 14:51:53 CST 2016
     */
    @DeleteProvider(type=BSellExgCtrlSqlProvider.class, method="deleteByExample")
    int deleteByExample(BSellExgCtrlExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_SELL_EXG_CTRL
     *
     * @mbggenerated Thu May 05 14:51:53 CST 2016
     */
    @Delete({
        "delete from B_SELL_EXG_CTRL",
        "where PAYBATNO = #{paybatno,jdbcType=VARCHAR}",
          "and PAYDATE = #{paydate,jdbcType=CHAR}"
    })
    int deleteByPrimaryKey(BSellExgCtrlKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_SELL_EXG_CTRL
     *
     * @mbggenerated Thu May 05 14:51:53 CST 2016
     */
    @Insert({
        "insert into B_SELL_EXG_CTRL (PAYBATNO, PAYDATE, ",
        "PAYTIME, QUOTECHNL, ",
        "REMIT_CCY, REMIT_AMT, ",
        "COST_TYPE, PAYEE_ACCT_NO, ",
        "PAYEE_CLIENT_NAME, PAYEE_ADDRESS, ",
        "PAYER_ACCT_NO, PAYER_CLIENT_NAME, ",
        "PAYER_ADDRESS, PAYEE_ACCT_OPEN_BRANCH_ID, ",
        "REMARK, CLEAR_BANK_BIC, ",
        "PROCESS_MSG, PROCESS_STATUS, ",
        "FAIL_REASON, CHKSTATUS, ",
        "STAMP, FILENAME, ",
        "BUSS_STATUS, TOT_NUM)",
        "values (#{paybatno,jdbcType=VARCHAR}, #{paydate,jdbcType=CHAR}, ",
        "#{paytime,jdbcType=CHAR}, #{quotechnl,jdbcType=VARCHAR}, ",
        "#{remitCcy,jdbcType=CHAR}, #{remitAmt,jdbcType=DECIMAL}, ",
        "#{costType,jdbcType=VARCHAR}, #{payeeAcctNo,jdbcType=VARCHAR}, ",
        "#{payeeClientName,jdbcType=VARCHAR}, #{payeeAddress,jdbcType=VARCHAR}, ",
        "#{payerAcctNo,jdbcType=VARCHAR}, #{payerClientName,jdbcType=VARCHAR}, ",
        "#{payerAddress,jdbcType=VARCHAR}, #{payeeAcctOpenBranchId,jdbcType=VARCHAR}, ",
        "#{remark,jdbcType=VARCHAR}, #{clearBankBic,jdbcType=VARCHAR}, ",
        "#{processMsg,jdbcType=VARCHAR}, #{processStatus,jdbcType=CHAR}, ",
        "#{failReason,jdbcType=VARCHAR}, #{chkstatus,jdbcType=CHAR}, ",
        "#{stamp,jdbcType=TIMESTAMP}, #{filename,jdbcType=VARCHAR}, ",
        "#{bussStatus,jdbcType=CHAR}, #{totNum,jdbcType=DECIMAL})"
    })
    int insert(BSellExgCtrl record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_SELL_EXG_CTRL
     *
     * @mbggenerated Thu May 05 14:51:53 CST 2016
     */
    @InsertProvider(type=BSellExgCtrlSqlProvider.class, method="insertSelective")
    int insertSelective(BSellExgCtrl record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_SELL_EXG_CTRL
     *
     * @mbggenerated Thu May 05 14:51:53 CST 2016
     */
    @SelectProvider(type=BSellExgCtrlSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="PAYBATNO", property="paybatno", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="PAYDATE", property="paydate", jdbcType=JdbcType.CHAR, id=true),
        @Result(column="PAYTIME", property="paytime", jdbcType=JdbcType.CHAR),
        @Result(column="QUOTECHNL", property="quotechnl", jdbcType=JdbcType.VARCHAR),
        @Result(column="REMIT_CCY", property="remitCcy", jdbcType=JdbcType.CHAR),
        @Result(column="REMIT_AMT", property="remitAmt", jdbcType=JdbcType.DECIMAL),
        @Result(column="COST_TYPE", property="costType", jdbcType=JdbcType.VARCHAR),
        @Result(column="PAYEE_ACCT_NO", property="payeeAcctNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="PAYEE_CLIENT_NAME", property="payeeClientName", jdbcType=JdbcType.VARCHAR),
        @Result(column="PAYEE_ADDRESS", property="payeeAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="PAYER_ACCT_NO", property="payerAcctNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="PAYER_CLIENT_NAME", property="payerClientName", jdbcType=JdbcType.VARCHAR),
        @Result(column="PAYER_ADDRESS", property="payerAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="PAYEE_ACCT_OPEN_BRANCH_ID", property="payeeAcctOpenBranchId", jdbcType=JdbcType.VARCHAR),
        @Result(column="REMARK", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="CLEAR_BANK_BIC", property="clearBankBic", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROCESS_MSG", property="processMsg", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROCESS_STATUS", property="processStatus", jdbcType=JdbcType.CHAR),
        @Result(column="FAIL_REASON", property="failReason", jdbcType=JdbcType.VARCHAR),
        @Result(column="CHKSTATUS", property="chkstatus", jdbcType=JdbcType.CHAR),
        @Result(column="STAMP", property="stamp", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="FILENAME", property="filename", jdbcType=JdbcType.VARCHAR),
        @Result(column="BUSS_STATUS", property="bussStatus", jdbcType=JdbcType.CHAR),
        @Result(column="TOT_NUM", property="totNum", jdbcType=JdbcType.DECIMAL)
    })
    List<BSellExgCtrl> selectByExample(BSellExgCtrlExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_SELL_EXG_CTRL
     *
     * @mbggenerated Thu May 05 14:51:53 CST 2016
     */
    @Select({
        "select",
        "PAYBATNO, PAYDATE, PAYTIME, QUOTECHNL, REMIT_CCY, REMIT_AMT, COST_TYPE, PAYEE_ACCT_NO, ",
        "PAYEE_CLIENT_NAME, PAYEE_ADDRESS, PAYER_ACCT_NO, PAYER_CLIENT_NAME, PAYER_ADDRESS, ",
        "PAYEE_ACCT_OPEN_BRANCH_ID, REMARK, CLEAR_BANK_BIC, PROCESS_MSG, PROCESS_STATUS, ",
        "FAIL_REASON, CHKSTATUS, STAMP, FILENAME, BUSS_STATUS, TOT_NUM",
        "from B_SELL_EXG_CTRL",
        "where PAYBATNO = #{paybatno,jdbcType=VARCHAR}",
          "and PAYDATE = #{paydate,jdbcType=CHAR}"
    })
    @Results({
        @Result(column="PAYBATNO", property="paybatno", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="PAYDATE", property="paydate", jdbcType=JdbcType.CHAR, id=true),
        @Result(column="PAYTIME", property="paytime", jdbcType=JdbcType.CHAR),
        @Result(column="QUOTECHNL", property="quotechnl", jdbcType=JdbcType.VARCHAR),
        @Result(column="REMIT_CCY", property="remitCcy", jdbcType=JdbcType.CHAR),
        @Result(column="REMIT_AMT", property="remitAmt", jdbcType=JdbcType.DECIMAL),
        @Result(column="COST_TYPE", property="costType", jdbcType=JdbcType.VARCHAR),
        @Result(column="PAYEE_ACCT_NO", property="payeeAcctNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="PAYEE_CLIENT_NAME", property="payeeClientName", jdbcType=JdbcType.VARCHAR),
        @Result(column="PAYEE_ADDRESS", property="payeeAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="PAYER_ACCT_NO", property="payerAcctNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="PAYER_CLIENT_NAME", property="payerClientName", jdbcType=JdbcType.VARCHAR),
        @Result(column="PAYER_ADDRESS", property="payerAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="PAYEE_ACCT_OPEN_BRANCH_ID", property="payeeAcctOpenBranchId", jdbcType=JdbcType.VARCHAR),
        @Result(column="REMARK", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="CLEAR_BANK_BIC", property="clearBankBic", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROCESS_MSG", property="processMsg", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROCESS_STATUS", property="processStatus", jdbcType=JdbcType.CHAR),
        @Result(column="FAIL_REASON", property="failReason", jdbcType=JdbcType.VARCHAR),
        @Result(column="CHKSTATUS", property="chkstatus", jdbcType=JdbcType.CHAR),
        @Result(column="STAMP", property="stamp", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="FILENAME", property="filename", jdbcType=JdbcType.VARCHAR),
        @Result(column="BUSS_STATUS", property="bussStatus", jdbcType=JdbcType.CHAR),
        @Result(column="TOT_NUM", property="totNum", jdbcType=JdbcType.DECIMAL)
    })
    BSellExgCtrl selectByPrimaryKey(BSellExgCtrlKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_SELL_EXG_CTRL
     *
     * @mbggenerated Thu May 05 14:51:53 CST 2016
     */
    @UpdateProvider(type=BSellExgCtrlSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") BSellExgCtrl record, @Param("example") BSellExgCtrlExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_SELL_EXG_CTRL
     *
     * @mbggenerated Thu May 05 14:51:53 CST 2016
     */
    @UpdateProvider(type=BSellExgCtrlSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") BSellExgCtrl record, @Param("example") BSellExgCtrlExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_SELL_EXG_CTRL
     *
     * @mbggenerated Thu May 05 14:51:53 CST 2016
     */
    @UpdateProvider(type=BSellExgCtrlSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(BSellExgCtrl record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_SELL_EXG_CTRL
     *
     * @mbggenerated Thu May 05 14:51:53 CST 2016
     */
    @Update({
        "update B_SELL_EXG_CTRL",
        "set PAYTIME = #{paytime,jdbcType=CHAR},",
          "QUOTECHNL = #{quotechnl,jdbcType=VARCHAR},",
          "REMIT_CCY = #{remitCcy,jdbcType=CHAR},",
          "REMIT_AMT = #{remitAmt,jdbcType=DECIMAL},",
          "COST_TYPE = #{costType,jdbcType=VARCHAR},",
          "PAYEE_ACCT_NO = #{payeeAcctNo,jdbcType=VARCHAR},",
          "PAYEE_CLIENT_NAME = #{payeeClientName,jdbcType=VARCHAR},",
          "PAYEE_ADDRESS = #{payeeAddress,jdbcType=VARCHAR},",
          "PAYER_ACCT_NO = #{payerAcctNo,jdbcType=VARCHAR},",
          "PAYER_CLIENT_NAME = #{payerClientName,jdbcType=VARCHAR},",
          "PAYER_ADDRESS = #{payerAddress,jdbcType=VARCHAR},",
          "PAYEE_ACCT_OPEN_BRANCH_ID = #{payeeAcctOpenBranchId,jdbcType=VARCHAR},",
          "REMARK = #{remark,jdbcType=VARCHAR},",
          "CLEAR_BANK_BIC = #{clearBankBic,jdbcType=VARCHAR},",
          "PROCESS_MSG = #{processMsg,jdbcType=VARCHAR},",
          "PROCESS_STATUS = #{processStatus,jdbcType=CHAR},",
          "FAIL_REASON = #{failReason,jdbcType=VARCHAR},",
          "CHKSTATUS = #{chkstatus,jdbcType=CHAR},",
          "STAMP = #{stamp,jdbcType=TIMESTAMP},",
          "FILENAME = #{filename,jdbcType=VARCHAR},",
          "BUSS_STATUS = #{bussStatus,jdbcType=CHAR},",
          "TOT_NUM = #{totNum,jdbcType=DECIMAL}",
        "where PAYBATNO = #{paybatno,jdbcType=VARCHAR}",
          "and PAYDATE = #{paydate,jdbcType=CHAR}"
    })
    int updateByPrimaryKey(BSellExgCtrl record);
}