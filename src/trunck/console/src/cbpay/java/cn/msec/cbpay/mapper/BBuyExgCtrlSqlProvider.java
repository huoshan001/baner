package cn.msec.cbpay.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import java.util.List;
import java.util.Map;

import cn.msec.cbpay.entity.BBuyExgCtrl;
import cn.msec.cbpay.entity.BBuyExgCtrlExample;
import cn.msec.cbpay.entity.BBuyExgCtrlExample.Criteria;
import cn.msec.cbpay.entity.BBuyExgCtrlExample.Criterion;

public class BBuyExgCtrlSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_BUY_EXG_CTRL
     *
     * @mbggenerated Wed May 04 15:01:39 CST 2016
     */
    public String countByExample(BBuyExgCtrlExample example) {
        BEGIN();
        SELECT("count(*)");
        FROM("B_BUY_EXG_CTRL");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_BUY_EXG_CTRL
     *
     * @mbggenerated Wed May 04 15:01:39 CST 2016
     */
    public String deleteByExample(BBuyExgCtrlExample example) {
        BEGIN();
        DELETE_FROM("B_BUY_EXG_CTRL");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_BUY_EXG_CTRL
     *
     * @mbggenerated Wed May 04 15:01:39 CST 2016
     */
    public String insertSelective(BBuyExgCtrl record) {
        BEGIN();
        INSERT_INTO("B_BUY_EXG_CTRL");
        
        if (record.getBuybatno() != null) {
            VALUES("BUYBATNO", "#{buybatno,jdbcType=VARCHAR}");
        }
        
        if (record.getBuydate() != null) {
            VALUES("BUYDATE", "#{buydate,jdbcType=CHAR}");
        }
        
        if (record.getBuytime() != null) {
            VALUES("BUYTIME", "#{buytime,jdbcType=CHAR}");
        }
        
        if (record.getQuotechnl() != null) {
            VALUES("QUOTECHNL", "#{quotechnl,jdbcType=VARCHAR}");
        }
        
        if (record.getBecif() != null) {
            VALUES("BECIF", "#{becif,jdbcType=VARCHAR}");
        }
        
        if (record.getTotNum() != null) {
            VALUES("TOT_NUM", "#{totNum,jdbcType=DECIMAL}");
        }
        
        if (record.getSaleCcy() != null) {
            VALUES("SALE_CCY", "#{saleCcy,jdbcType=CHAR}");
        }
        
        if (record.getBuyCcy() != null) {
            VALUES("BUY_CCY", "#{buyCcy,jdbcType=CHAR}");
        }
        
        if (record.getBuySellFlag() != null) {
            VALUES("BUY_SELL_FLAG", "#{buySellFlag,jdbcType=CHAR}");
        }
        
        if (record.getTotalAmt() != null) {
            VALUES("TOTAL_AMT", "#{totalAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getSpotFlag() != null) {
            VALUES("SPOT_FLAG", "#{spotFlag,jdbcType=CHAR}");
        }
        
        if (record.getRegisterDate() != null) {
            VALUES("REGISTER_DATE", "#{registerDate,jdbcType=CHAR}");
        }
        
        if (record.getPrice() != null) {
            VALUES("PRICE", "#{price,jdbcType=DECIMAL}");
        }
        
        if (record.getClientExchangeRate() != null) {
            VALUES("CLIENT_EXCHANGE_RATE", "#{clientExchangeRate,jdbcType=DECIMAL}");
        }
        
        if (record.getDiscountType() != null) {
            VALUES("DISCOUNT_TYPE", "#{discountType,jdbcType=CHAR}");
        }
        
        if (record.getDisAmt() != null) {
            VALUES("DIS_AMT", "#{disAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getAmt() != null) {
            VALUES("AMT", "#{amt,jdbcType=DECIMAL}");
        }
        
        if (record.getTranAmt() != null) {
            VALUES("TRAN_AMT", "#{tranAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getSellAcctNo() != null) {
            VALUES("SELL_ACCT_NO", "#{sellAcctNo,jdbcType=VARCHAR}");
        }
        
        if (record.getBuyAcctNo() != null) {
            VALUES("BUY_ACCT_NO", "#{buyAcctNo,jdbcType=VARCHAR}");
        }
        
        if (record.getSaleAmount() != null) {
            VALUES("SALE_AMOUNT", "#{saleAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getBuyAmount() != null) {
            VALUES("BUY_AMOUNT", "#{buyAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getRateTime() != null) {
            VALUES("RATE_TIME", "#{rateTime,jdbcType=VARCHAR}");
        }
        
        if (record.getExceedFlag() != null) {
            VALUES("EXCEED_FLAG", "#{exceedFlag,jdbcType=CHAR}");
        }
        
        if (record.getProcessStatus() != null) {
            VALUES("PROCESS_STATUS", "#{processStatus,jdbcType=VARCHAR}");
        }
        
        if (record.getProcessMsg() != null) {
            VALUES("PROCESS_MSG", "#{processMsg,jdbcType=VARCHAR}");
        }
        
        if (record.getTxnSts() != null) {
            VALUES("TXN_STS", "#{txnSts,jdbcType=CHAR}");
        }
        
        if (record.getChkSts() != null) {
            VALUES("CHK_STS", "#{chkSts,jdbcType=CHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_BUY_EXG_CTRL
     *
     * @mbggenerated Wed May 04 15:01:39 CST 2016
     */
    public String selectByExample(BBuyExgCtrlExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("BUYBATNO");
        } else {
            SELECT("BUYBATNO");
        }
        SELECT("BUYDATE");
        SELECT("BUYTIME");
        SELECT("QUOTECHNL");
        SELECT("BECIF");
        SELECT("TOT_NUM");
        SELECT("SALE_CCY");
        SELECT("BUY_CCY");
        SELECT("BUY_SELL_FLAG");
        SELECT("TOTAL_AMT");
        SELECT("SPOT_FLAG");
        SELECT("REGISTER_DATE");
        SELECT("PRICE");
        SELECT("CLIENT_EXCHANGE_RATE");
        SELECT("DISCOUNT_TYPE");
        SELECT("DIS_AMT");
        SELECT("AMT");
        SELECT("TRAN_AMT");
        SELECT("SELL_ACCT_NO");
        SELECT("BUY_ACCT_NO");
        SELECT("SALE_AMOUNT");
        SELECT("BUY_AMOUNT");
        SELECT("RATE_TIME");
        SELECT("EXCEED_FLAG");
        SELECT("PROCESS_STATUS");
        SELECT("PROCESS_MSG");
        SELECT("TXN_STS");
        SELECT("CHK_STS");
        FROM("B_BUY_EXG_CTRL");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        if(example != null){
            return SQL().concat(" limit "+example.getOffset()+","+example.getLimit());
        }
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_BUY_EXG_CTRL
     *
     * @mbggenerated Wed May 04 15:01:39 CST 2016
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        BBuyExgCtrl record = (BBuyExgCtrl) parameter.get("record");
        BBuyExgCtrlExample example = (BBuyExgCtrlExample) parameter.get("example");
        
        BEGIN();
        UPDATE("B_BUY_EXG_CTRL");
        
        if (record.getBuybatno() != null) {
            SET("BUYBATNO = #{record.buybatno,jdbcType=VARCHAR}");
        }
        
        if (record.getBuydate() != null) {
            SET("BUYDATE = #{record.buydate,jdbcType=CHAR}");
        }
        
        if (record.getBuytime() != null) {
            SET("BUYTIME = #{record.buytime,jdbcType=CHAR}");
        }
        
        if (record.getQuotechnl() != null) {
            SET("QUOTECHNL = #{record.quotechnl,jdbcType=VARCHAR}");
        }
        
        if (record.getBecif() != null) {
            SET("BECIF = #{record.becif,jdbcType=VARCHAR}");
        }
        
        if (record.getTotNum() != null) {
            SET("TOT_NUM = #{record.totNum,jdbcType=DECIMAL}");
        }
        
        if (record.getSaleCcy() != null) {
            SET("SALE_CCY = #{record.saleCcy,jdbcType=CHAR}");
        }
        
        if (record.getBuyCcy() != null) {
            SET("BUY_CCY = #{record.buyCcy,jdbcType=CHAR}");
        }
        
        if (record.getBuySellFlag() != null) {
            SET("BUY_SELL_FLAG = #{record.buySellFlag,jdbcType=CHAR}");
        }
        
        if (record.getTotalAmt() != null) {
            SET("TOTAL_AMT = #{record.totalAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getSpotFlag() != null) {
            SET("SPOT_FLAG = #{record.spotFlag,jdbcType=CHAR}");
        }
        
        if (record.getRegisterDate() != null) {
            SET("REGISTER_DATE = #{record.registerDate,jdbcType=CHAR}");
        }
        
        if (record.getPrice() != null) {
            SET("PRICE = #{record.price,jdbcType=DECIMAL}");
        }
        
        if (record.getClientExchangeRate() != null) {
            SET("CLIENT_EXCHANGE_RATE = #{record.clientExchangeRate,jdbcType=DECIMAL}");
        }
        
        if (record.getDiscountType() != null) {
            SET("DISCOUNT_TYPE = #{record.discountType,jdbcType=CHAR}");
        }
        
        if (record.getDisAmt() != null) {
            SET("DIS_AMT = #{record.disAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getAmt() != null) {
            SET("AMT = #{record.amt,jdbcType=DECIMAL}");
        }
        
        if (record.getTranAmt() != null) {
            SET("TRAN_AMT = #{record.tranAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getSellAcctNo() != null) {
            SET("SELL_ACCT_NO = #{record.sellAcctNo,jdbcType=VARCHAR}");
        }
        
        if (record.getBuyAcctNo() != null) {
            SET("BUY_ACCT_NO = #{record.buyAcctNo,jdbcType=VARCHAR}");
        }
        
        if (record.getSaleAmount() != null) {
            SET("SALE_AMOUNT = #{record.saleAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getBuyAmount() != null) {
            SET("BUY_AMOUNT = #{record.buyAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getRateTime() != null) {
            SET("RATE_TIME = #{record.rateTime,jdbcType=VARCHAR}");
        }
        
        if (record.getExceedFlag() != null) {
            SET("EXCEED_FLAG = #{record.exceedFlag,jdbcType=CHAR}");
        }
        
        if (record.getProcessStatus() != null) {
            SET("PROCESS_STATUS = #{record.processStatus,jdbcType=VARCHAR}");
        }
        
        if (record.getProcessMsg() != null) {
            SET("PROCESS_MSG = #{record.processMsg,jdbcType=VARCHAR}");
        }
        
        if (record.getTxnSts() != null) {
            SET("TXN_STS = #{record.txnSts,jdbcType=CHAR}");
        }
        
        if (record.getChkSts() != null) {
            SET("CHK_STS = #{record.chkSts,jdbcType=CHAR}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_BUY_EXG_CTRL
     *
     * @mbggenerated Wed May 04 15:01:39 CST 2016
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("B_BUY_EXG_CTRL");
        
        SET("BUYBATNO = #{record.buybatno,jdbcType=VARCHAR}");
        SET("BUYDATE = #{record.buydate,jdbcType=CHAR}");
        SET("BUYTIME = #{record.buytime,jdbcType=CHAR}");
        SET("QUOTECHNL = #{record.quotechnl,jdbcType=VARCHAR}");
        SET("BECIF = #{record.becif,jdbcType=VARCHAR}");
        SET("TOT_NUM = #{record.totNum,jdbcType=DECIMAL}");
        SET("SALE_CCY = #{record.saleCcy,jdbcType=CHAR}");
        SET("BUY_CCY = #{record.buyCcy,jdbcType=CHAR}");
        SET("BUY_SELL_FLAG = #{record.buySellFlag,jdbcType=CHAR}");
        SET("TOTAL_AMT = #{record.totalAmt,jdbcType=DECIMAL}");
        SET("SPOT_FLAG = #{record.spotFlag,jdbcType=CHAR}");
        SET("REGISTER_DATE = #{record.registerDate,jdbcType=CHAR}");
        SET("PRICE = #{record.price,jdbcType=DECIMAL}");
        SET("CLIENT_EXCHANGE_RATE = #{record.clientExchangeRate,jdbcType=DECIMAL}");
        SET("DISCOUNT_TYPE = #{record.discountType,jdbcType=CHAR}");
        SET("DIS_AMT = #{record.disAmt,jdbcType=DECIMAL}");
        SET("AMT = #{record.amt,jdbcType=DECIMAL}");
        SET("TRAN_AMT = #{record.tranAmt,jdbcType=DECIMAL}");
        SET("SELL_ACCT_NO = #{record.sellAcctNo,jdbcType=VARCHAR}");
        SET("BUY_ACCT_NO = #{record.buyAcctNo,jdbcType=VARCHAR}");
        SET("SALE_AMOUNT = #{record.saleAmount,jdbcType=DECIMAL}");
        SET("BUY_AMOUNT = #{record.buyAmount,jdbcType=DECIMAL}");
        SET("RATE_TIME = #{record.rateTime,jdbcType=VARCHAR}");
        SET("EXCEED_FLAG = #{record.exceedFlag,jdbcType=CHAR}");
        SET("PROCESS_STATUS = #{record.processStatus,jdbcType=VARCHAR}");
        SET("PROCESS_MSG = #{record.processMsg,jdbcType=VARCHAR}");
        SET("TXN_STS = #{record.txnSts,jdbcType=CHAR}");
        SET("CHK_STS = #{record.chkSts,jdbcType=CHAR}");
        
        BBuyExgCtrlExample example = (BBuyExgCtrlExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_BUY_EXG_CTRL
     *
     * @mbggenerated Wed May 04 15:01:39 CST 2016
     */
    public String updateByPrimaryKeySelective(BBuyExgCtrl record) {
        BEGIN();
        UPDATE("B_BUY_EXG_CTRL");
        
        if (record.getBuytime() != null) {
            SET("BUYTIME = #{buytime,jdbcType=CHAR}");
        }
        
        if (record.getQuotechnl() != null) {
            SET("QUOTECHNL = #{quotechnl,jdbcType=VARCHAR}");
        }
        
        if (record.getBecif() != null) {
            SET("BECIF = #{becif,jdbcType=VARCHAR}");
        }
        
        if (record.getTotNum() != null) {
            SET("TOT_NUM = #{totNum,jdbcType=DECIMAL}");
        }
        
        if (record.getSaleCcy() != null) {
            SET("SALE_CCY = #{saleCcy,jdbcType=CHAR}");
        }
        
        if (record.getBuyCcy() != null) {
            SET("BUY_CCY = #{buyCcy,jdbcType=CHAR}");
        }
        
        if (record.getBuySellFlag() != null) {
            SET("BUY_SELL_FLAG = #{buySellFlag,jdbcType=CHAR}");
        }
        
        if (record.getTotalAmt() != null) {
            SET("TOTAL_AMT = #{totalAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getSpotFlag() != null) {
            SET("SPOT_FLAG = #{spotFlag,jdbcType=CHAR}");
        }
        
        if (record.getRegisterDate() != null) {
            SET("REGISTER_DATE = #{registerDate,jdbcType=CHAR}");
        }
        
        if (record.getPrice() != null) {
            SET("PRICE = #{price,jdbcType=DECIMAL}");
        }
        
        if (record.getClientExchangeRate() != null) {
            SET("CLIENT_EXCHANGE_RATE = #{clientExchangeRate,jdbcType=DECIMAL}");
        }
        
        if (record.getDiscountType() != null) {
            SET("DISCOUNT_TYPE = #{discountType,jdbcType=CHAR}");
        }
        
        if (record.getDisAmt() != null) {
            SET("DIS_AMT = #{disAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getAmt() != null) {
            SET("AMT = #{amt,jdbcType=DECIMAL}");
        }
        
        if (record.getTranAmt() != null) {
            SET("TRAN_AMT = #{tranAmt,jdbcType=DECIMAL}");
        }
        
        if (record.getSellAcctNo() != null) {
            SET("SELL_ACCT_NO = #{sellAcctNo,jdbcType=VARCHAR}");
        }
        
        if (record.getBuyAcctNo() != null) {
            SET("BUY_ACCT_NO = #{buyAcctNo,jdbcType=VARCHAR}");
        }
        
        if (record.getSaleAmount() != null) {
            SET("SALE_AMOUNT = #{saleAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getBuyAmount() != null) {
            SET("BUY_AMOUNT = #{buyAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getRateTime() != null) {
            SET("RATE_TIME = #{rateTime,jdbcType=VARCHAR}");
        }
        
        if (record.getExceedFlag() != null) {
            SET("EXCEED_FLAG = #{exceedFlag,jdbcType=CHAR}");
        }
        
        if (record.getProcessStatus() != null) {
            SET("PROCESS_STATUS = #{processStatus,jdbcType=VARCHAR}");
        }
        
        if (record.getProcessMsg() != null) {
            SET("PROCESS_MSG = #{processMsg,jdbcType=VARCHAR}");
        }
        
        if (record.getTxnSts() != null) {
            SET("TXN_STS = #{txnSts,jdbcType=CHAR}");
        }
        
        if (record.getChkSts() != null) {
            SET("CHK_STS = #{chkSts,jdbcType=CHAR}");
        }
        
        WHERE("BUYBATNO = #{buybatno,jdbcType=VARCHAR}");
        WHERE("BUYDATE = #{buydate,jdbcType=CHAR}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_BUY_EXG_CTRL
     *
     * @mbggenerated Wed May 04 15:01:39 CST 2016
     */
    protected void applyWhere(BBuyExgCtrlExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}