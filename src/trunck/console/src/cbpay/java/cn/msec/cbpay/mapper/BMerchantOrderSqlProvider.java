package cn.msec.cbpay.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import java.util.List;
import java.util.Map;

import cn.msec.cbpay.entity.BMerchantOrder;
import cn.msec.cbpay.entity.BMerchantOrderExample;
import cn.msec.cbpay.entity.BMerchantOrderExample.Criteria;
import cn.msec.cbpay.entity.BMerchantOrderExample.Criterion;

public class BMerchantOrderSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_MERCHANT_ORDER
     *
     * @mbggenerated Wed Jun 15 16:50:27 CST 2016
     */
    public String countByExample(BMerchantOrderExample example) {
        BEGIN();
        SELECT("count(*)");
        FROM("B_MERCHANT_ORDER");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_MERCHANT_ORDER
     *
     * @mbggenerated Wed Jun 15 16:50:27 CST 2016
     */
    public String deleteByExample(BMerchantOrderExample example) {
        BEGIN();
        DELETE_FROM("B_MERCHANT_ORDER");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_MERCHANT_ORDER
     *
     * @mbggenerated Wed Jun 15 16:50:27 CST 2016
     */
    public String insertSelective(BMerchantOrder record) {
        BEGIN();
        INSERT_INTO("B_MERCHANT_ORDER");
        
        if (record.getMerchantid() != null) {
            VALUES("MERCHANTID", "#{merchantid,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderid() != null) {
            VALUES("ORDERID", "#{orderid,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderdate() != null) {
            VALUES("ORDERDATE", "#{orderdate,jdbcType=CHAR}");
        }
        
        if (record.getPayjnlno() != null) {
            VALUES("PAYJNLNO", "#{payjnlno,jdbcType=VARCHAR}");
        }
        
        if (record.getPaytime() != null) {
            VALUES("PAYTIME", "#{paytime,jdbcType=CHAR}");
        }
        
        if (record.getOrdertime() != null) {
            VALUES("ORDERTIME", "#{ordertime,jdbcType=CHAR}");
        }
        
        if (record.getClientip() != null) {
            VALUES("CLIENTIP", "#{clientip,jdbcType=VARCHAR}");
        }
        
        if (record.getPurchaserid() != null) {
            VALUES("PURCHASERID", "#{purchaserid,jdbcType=VARCHAR}");
        }
        
        if (record.getValidunit() != null) {
            VALUES("VALIDUNIT", "#{validunit,jdbcType=VARCHAR}");
        }
        
        if (record.getValidnum() != null) {
            VALUES("VALIDNUM", "#{validnum,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderdesc() != null) {
            VALUES("ORDERDESC", "#{orderdesc,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderamount() != null) {
            VALUES("ORDERAMOUNT", "#{orderamount,jdbcType=DECIMAL}");
        }
        
        if (record.getCurrency() != null) {
            VALUES("CURRENCY", "#{currency,jdbcType=VARCHAR}");
        }
        
        if (record.getMerchantpoundage() != null) {
            VALUES("MERCHANTPOUNDAGE", "#{merchantpoundage,jdbcType=DECIMAL}");
        }
        
        if (record.getPurchaseamount() != null) {
            VALUES("PURCHASEAMOUNT", "#{purchaseamount,jdbcType=DECIMAL}");
        }
        
        if (record.getChannel() != null) {
            VALUES("CHANNEL", "#{channel,jdbcType=VARCHAR}");
        }
        
        if (record.getAcceptancerate() != null) {
            VALUES("ACCEPTANCERATE", "#{acceptancerate,jdbcType=DECIMAL}");
        }
        
        if (record.getAcceptancemount() != null) {
            VALUES("ACCEPTANCEMOUNT", "#{acceptancemount,jdbcType=DECIMAL}");
        }
        
        if (record.getAcceptancycurrency() != null) {
            VALUES("ACCEPTANCYCURRENCY", "#{acceptancycurrency,jdbcType=VARCHAR}");
        }
        
        if (record.getAcceptancypoundage() != null) {
            VALUES("ACCEPTANCYPOUNDAGE", "#{acceptancypoundage,jdbcType=DECIMAL}");
        }
        
        if (record.getOrderstatus() != null) {
            VALUES("ORDERSTATUS", "#{orderstatus,jdbcType=VARCHAR}");
        }
        
        if (record.getPagereturnurl() != null) {
            VALUES("PAGERETURNURL", "#{pagereturnurl,jdbcType=VARCHAR}");
        }
        
        if (record.getOfflinenotifyurl() != null) {
            VALUES("OFFLINENOTIFYURL", "#{offlinenotifyurl,jdbcType=VARCHAR}");
        }
        
        if (record.getPayorderid() != null) {
            VALUES("PAYORDERID", "#{payorderid,jdbcType=VARCHAR}");
        }
        
        if (record.getBuybatno() != null) {
            VALUES("BUYBATNO", "#{buybatno,jdbcType=VARCHAR}");
        }
        
        if (record.getBuybatstatus() != null) {
            VALUES("BUYBATSTATUS", "#{buybatstatus,jdbcType=CHAR}");
        }
        
        if (record.getBuybatrate() != null) {
            VALUES("BUYBATRATE", "#{buybatrate,jdbcType=DECIMAL}");
        }
        
        if (record.getUpordownmount() != null) {
            VALUES("UPORDOWNMOUNT", "#{upordownmount,jdbcType=DECIMAL}");
        }
        
        if (record.getPaybatno() != null) {
            VALUES("PAYBATNO", "#{paybatno,jdbcType=VARCHAR}");
        }
        
        if (record.getPaybatstatus() != null) {
            VALUES("PAYBATSTATUS", "#{paybatstatus,jdbcType=CHAR}");
        }
        
        if (record.getMountchangeno() != null) {
            VALUES("MOUNTCHANGENO", "#{mountchangeno,jdbcType=VARCHAR}");
        }
        
        if (record.getMountchangestatus() != null) {
            VALUES("MOUNTCHANGESTATUS", "#{mountchangestatus,jdbcType=CHAR}");
        }
        
        if (record.getSettlebatno() != null) {
            VALUES("SETTLEBATNO", "#{settlebatno,jdbcType=VARCHAR}");
        }
        
        if (record.getSettlebatstatus() != null) {
            VALUES("SETTLEBATSTATUS", "#{settlebatstatus,jdbcType=CHAR}");
        }
        
        if (record.getUserid() != null) {
            VALUES("USERID", "#{userid,jdbcType=VARCHAR}");
        }
        
        if (record.getTradeType() != null) {
            VALUES("TRADE_TYPE", "#{tradeType,jdbcType=VARCHAR}");
        }
        
        if (record.getBuybatdate() != null) {
            VALUES("BUYBATDATE", "#{buybatdate,jdbcType=CHAR}");
        }
        
        if (record.getPaycard() != null) {
            VALUES("PAYCARD", "#{paycard,jdbcType=VARCHAR}");
        }
        
        if (record.getPaydate() != null) {
            VALUES("PAYDATE", "#{paydate,jdbcType=CHAR}");
        }
        
        if (record.getTradeCode() != null) {
            VALUES("TRADE_CODE", "#{tradeCode,jdbcType=VARCHAR}");
        }
        
        if (record.getIsRef() != null) {
            VALUES("IS_REF", "#{isRef,jdbcType=CHAR}");
        }
        
        if (record.getPaybatdate() != null) {
            VALUES("PAYBATDATE", "#{paybatdate,jdbcType=CHAR}");
        }
        
        if (record.getProductid() != null) {
            VALUES("PRODUCTID", "#{productid,jdbcType=VARCHAR}");
        }
        
        if (record.getProductname() != null) {
            VALUES("PRODUCTNAME", "#{productname,jdbcType=VARCHAR}");
        }
        
        if (record.getProductdesc() != null) {
            VALUES("PRODUCTDESC", "#{productdesc,jdbcType=VARCHAR}");
        }
        
        if (record.getShowurl() != null) {
            VALUES("SHOWURL", "#{showurl,jdbcType=VARCHAR}");
        }
        
        if (record.getIsresponse() != null) {
            VALUES("ISRESPONSE", "#{isresponse,jdbcType=CHAR}");
        }
        
        if (record.getRcvtime() != null) {
            VALUES("RCVTIME", "#{rcvtime,jdbcType=VARCHAR}");
        }
        
        if (record.getRcvdate() != null) {
            VALUES("RCVDATE", "#{rcvdate,jdbcType=VARCHAR}");
        }
        
        if (record.getTmsmp() != null) {
            VALUES("TMSMP", "#{tmsmp,jdbcType=VARCHAR}");
        }
        
        if (record.getInvoiceno() != null) {
            VALUES("INVOICENO", "#{invoiceno,jdbcType=VARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_MERCHANT_ORDER
     *
     * @mbggenerated Wed Jun 15 16:50:27 CST 2016
     */
    public String selectByExample(BMerchantOrderExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("MERCHANTID");
        } else {
            SELECT("MERCHANTID");
        }
        SELECT("ORDERID");
        SELECT("ORDERDATE");
        SELECT("PAYJNLNO");
        SELECT("PAYTIME");
        SELECT("ORDERTIME");
        SELECT("CLIENTIP");
        SELECT("PURCHASERID");
        SELECT("VALIDUNIT");
        SELECT("VALIDNUM");
        SELECT("ORDERDESC");
        SELECT("ORDERAMOUNT");
        SELECT("CURRENCY");
        SELECT("MERCHANTPOUNDAGE");
        SELECT("PURCHASEAMOUNT");
        SELECT("CHANNEL");
        SELECT("ACCEPTANCERATE");
        SELECT("ACCEPTANCEMOUNT");
        SELECT("ACCEPTANCYCURRENCY");
        SELECT("ACCEPTANCYPOUNDAGE");
        SELECT("ORDERSTATUS");
        SELECT("PAGERETURNURL");
        SELECT("OFFLINENOTIFYURL");
        SELECT("PAYORDERID");
        SELECT("BUYBATNO");
        SELECT("BUYBATSTATUS");
        SELECT("BUYBATRATE");
        SELECT("UPORDOWNMOUNT");
        SELECT("PAYBATNO");
        SELECT("PAYBATSTATUS");
        SELECT("MOUNTCHANGENO");
        SELECT("MOUNTCHANGESTATUS");
        SELECT("SETTLEBATNO");
        SELECT("SETTLEBATSTATUS");
        SELECT("USERID");
        SELECT("TRADE_TYPE");
        SELECT("BUYBATDATE");
        SELECT("PAYCARD");
        SELECT("PAYDATE");
        SELECT("TRADE_CODE");
        SELECT("IS_REF");
        SELECT("PAYBATDATE");
        SELECT("PRODUCTID");
        SELECT("PRODUCTNAME");
        SELECT("PRODUCTDESC");
        SELECT("SHOWURL");
        SELECT("ISRESPONSE");
        SELECT("RCVTIME");
        SELECT("RCVDATE");
        SELECT("TMSMP");
        SELECT("INVOICENO");
        FROM("B_MERCHANT_ORDER");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_MERCHANT_ORDER
     *
     * @mbggenerated Wed Jun 15 16:50:27 CST 2016
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        BMerchantOrder record = (BMerchantOrder) parameter.get("record");
        BMerchantOrderExample example = (BMerchantOrderExample) parameter.get("example");
        
        BEGIN();
        UPDATE("B_MERCHANT_ORDER");
        
        if (record.getMerchantid() != null) {
            SET("MERCHANTID = #{record.merchantid,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderid() != null) {
            SET("ORDERID = #{record.orderid,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderdate() != null) {
            SET("ORDERDATE = #{record.orderdate,jdbcType=CHAR}");
        }
        
        if (record.getPayjnlno() != null) {
            SET("PAYJNLNO = #{record.payjnlno,jdbcType=VARCHAR}");
        }
        
        if (record.getPaytime() != null) {
            SET("PAYTIME = #{record.paytime,jdbcType=CHAR}");
        }
        
        if (record.getOrdertime() != null) {
            SET("ORDERTIME = #{record.ordertime,jdbcType=CHAR}");
        }
        
        if (record.getClientip() != null) {
            SET("CLIENTIP = #{record.clientip,jdbcType=VARCHAR}");
        }
        
        if (record.getPurchaserid() != null) {
            SET("PURCHASERID = #{record.purchaserid,jdbcType=VARCHAR}");
        }
        
        if (record.getValidunit() != null) {
            SET("VALIDUNIT = #{record.validunit,jdbcType=VARCHAR}");
        }
        
        if (record.getValidnum() != null) {
            SET("VALIDNUM = #{record.validnum,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderdesc() != null) {
            SET("ORDERDESC = #{record.orderdesc,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderamount() != null) {
            SET("ORDERAMOUNT = #{record.orderamount,jdbcType=DECIMAL}");
        }
        
        if (record.getCurrency() != null) {
            SET("CURRENCY = #{record.currency,jdbcType=VARCHAR}");
        }
        
        if (record.getMerchantpoundage() != null) {
            SET("MERCHANTPOUNDAGE = #{record.merchantpoundage,jdbcType=DECIMAL}");
        }
        
        if (record.getPurchaseamount() != null) {
            SET("PURCHASEAMOUNT = #{record.purchaseamount,jdbcType=DECIMAL}");
        }
        
        if (record.getChannel() != null) {
            SET("CHANNEL = #{record.channel,jdbcType=VARCHAR}");
        }
        
        if (record.getAcceptancerate() != null) {
            SET("ACCEPTANCERATE = #{record.acceptancerate,jdbcType=DECIMAL}");
        }
        
        if (record.getAcceptancemount() != null) {
            SET("ACCEPTANCEMOUNT = #{record.acceptancemount,jdbcType=DECIMAL}");
        }
        
        if (record.getAcceptancycurrency() != null) {
            SET("ACCEPTANCYCURRENCY = #{record.acceptancycurrency,jdbcType=VARCHAR}");
        }
        
        if (record.getAcceptancypoundage() != null) {
            SET("ACCEPTANCYPOUNDAGE = #{record.acceptancypoundage,jdbcType=DECIMAL}");
        }
        
        if (record.getOrderstatus() != null) {
            SET("ORDERSTATUS = #{record.orderstatus,jdbcType=VARCHAR}");
        }
        
        if (record.getPagereturnurl() != null) {
            SET("PAGERETURNURL = #{record.pagereturnurl,jdbcType=VARCHAR}");
        }
        
        if (record.getOfflinenotifyurl() != null) {
            SET("OFFLINENOTIFYURL = #{record.offlinenotifyurl,jdbcType=VARCHAR}");
        }
        
        if (record.getPayorderid() != null) {
            SET("PAYORDERID = #{record.payorderid,jdbcType=VARCHAR}");
        }
        
        if (record.getBuybatno() != null) {
            SET("BUYBATNO = #{record.buybatno,jdbcType=VARCHAR}");
        }
        
        if (record.getBuybatstatus() != null) {
            SET("BUYBATSTATUS = #{record.buybatstatus,jdbcType=CHAR}");
        }
        
        if (record.getBuybatrate() != null) {
            SET("BUYBATRATE = #{record.buybatrate,jdbcType=DECIMAL}");
        }
        
        if (record.getUpordownmount() != null) {
            SET("UPORDOWNMOUNT = #{record.upordownmount,jdbcType=DECIMAL}");
        }
        
        if (record.getPaybatno() != null) {
            SET("PAYBATNO = #{record.paybatno,jdbcType=VARCHAR}");
        }
        
        if (record.getPaybatstatus() != null) {
            SET("PAYBATSTATUS = #{record.paybatstatus,jdbcType=CHAR}");
        }
        
        if (record.getMountchangeno() != null) {
            SET("MOUNTCHANGENO = #{record.mountchangeno,jdbcType=VARCHAR}");
        }
        
        if (record.getMountchangestatus() != null) {
            SET("MOUNTCHANGESTATUS = #{record.mountchangestatus,jdbcType=CHAR}");
        }
        
        if (record.getSettlebatno() != null) {
            SET("SETTLEBATNO = #{record.settlebatno,jdbcType=VARCHAR}");
        }
        
        if (record.getSettlebatstatus() != null) {
            SET("SETTLEBATSTATUS = #{record.settlebatstatus,jdbcType=CHAR}");
        }
        
        if (record.getUserid() != null) {
            SET("USERID = #{record.userid,jdbcType=VARCHAR}");
        }
        
        if (record.getTradeType() != null) {
            SET("TRADE_TYPE = #{record.tradeType,jdbcType=VARCHAR}");
        }
        
        if (record.getBuybatdate() != null) {
            SET("BUYBATDATE = #{record.buybatdate,jdbcType=CHAR}");
        }
        
        if (record.getPaycard() != null) {
            SET("PAYCARD = #{record.paycard,jdbcType=VARCHAR}");
        }
        
        if (record.getPaydate() != null) {
            SET("PAYDATE = #{record.paydate,jdbcType=CHAR}");
        }
        
        if (record.getTradeCode() != null) {
            SET("TRADE_CODE = #{record.tradeCode,jdbcType=VARCHAR}");
        }
        
        if (record.getIsRef() != null) {
            SET("IS_REF = #{record.isRef,jdbcType=CHAR}");
        }
        
        if (record.getPaybatdate() != null) {
            SET("PAYBATDATE = #{record.paybatdate,jdbcType=CHAR}");
        }
        
        if (record.getProductid() != null) {
            SET("PRODUCTID = #{record.productid,jdbcType=VARCHAR}");
        }
        
        if (record.getProductname() != null) {
            SET("PRODUCTNAME = #{record.productname,jdbcType=VARCHAR}");
        }
        
        if (record.getProductdesc() != null) {
            SET("PRODUCTDESC = #{record.productdesc,jdbcType=VARCHAR}");
        }
        
        if (record.getShowurl() != null) {
            SET("SHOWURL = #{record.showurl,jdbcType=VARCHAR}");
        }
        
        if (record.getIsresponse() != null) {
            SET("ISRESPONSE = #{record.isresponse,jdbcType=CHAR}");
        }
        
        if (record.getRcvtime() != null) {
            SET("RCVTIME = #{record.rcvtime,jdbcType=VARCHAR}");
        }
        
        if (record.getRcvdate() != null) {
            SET("RCVDATE = #{record.rcvdate,jdbcType=VARCHAR}");
        }
        
        if (record.getTmsmp() != null) {
            SET("TMSMP = #{record.tmsmp,jdbcType=VARCHAR}");
        }
        
        if (record.getInvoiceno() != null) {
            SET("INVOICENO = #{record.invoiceno,jdbcType=VARCHAR}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_MERCHANT_ORDER
     *
     * @mbggenerated Wed Jun 15 16:50:27 CST 2016
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("B_MERCHANT_ORDER");
        
        SET("MERCHANTID = #{record.merchantid,jdbcType=VARCHAR}");
        SET("ORDERID = #{record.orderid,jdbcType=VARCHAR}");
        SET("ORDERDATE = #{record.orderdate,jdbcType=CHAR}");
        SET("PAYJNLNO = #{record.payjnlno,jdbcType=VARCHAR}");
        SET("PAYTIME = #{record.paytime,jdbcType=CHAR}");
        SET("ORDERTIME = #{record.ordertime,jdbcType=CHAR}");
        SET("CLIENTIP = #{record.clientip,jdbcType=VARCHAR}");
        SET("PURCHASERID = #{record.purchaserid,jdbcType=VARCHAR}");
        SET("VALIDUNIT = #{record.validunit,jdbcType=VARCHAR}");
        SET("VALIDNUM = #{record.validnum,jdbcType=VARCHAR}");
        SET("ORDERDESC = #{record.orderdesc,jdbcType=VARCHAR}");
        SET("ORDERAMOUNT = #{record.orderamount,jdbcType=DECIMAL}");
        SET("CURRENCY = #{record.currency,jdbcType=VARCHAR}");
        SET("MERCHANTPOUNDAGE = #{record.merchantpoundage,jdbcType=DECIMAL}");
        SET("PURCHASEAMOUNT = #{record.purchaseamount,jdbcType=DECIMAL}");
        SET("CHANNEL = #{record.channel,jdbcType=VARCHAR}");
        SET("ACCEPTANCERATE = #{record.acceptancerate,jdbcType=DECIMAL}");
        SET("ACCEPTANCEMOUNT = #{record.acceptancemount,jdbcType=DECIMAL}");
        SET("ACCEPTANCYCURRENCY = #{record.acceptancycurrency,jdbcType=VARCHAR}");
        SET("ACCEPTANCYPOUNDAGE = #{record.acceptancypoundage,jdbcType=DECIMAL}");
        SET("ORDERSTATUS = #{record.orderstatus,jdbcType=VARCHAR}");
        SET("PAGERETURNURL = #{record.pagereturnurl,jdbcType=VARCHAR}");
        SET("OFFLINENOTIFYURL = #{record.offlinenotifyurl,jdbcType=VARCHAR}");
        SET("PAYORDERID = #{record.payorderid,jdbcType=VARCHAR}");
        SET("BUYBATNO = #{record.buybatno,jdbcType=VARCHAR}");
        SET("BUYBATSTATUS = #{record.buybatstatus,jdbcType=CHAR}");
        SET("BUYBATRATE = #{record.buybatrate,jdbcType=DECIMAL}");
        SET("UPORDOWNMOUNT = #{record.upordownmount,jdbcType=DECIMAL}");
        SET("PAYBATNO = #{record.paybatno,jdbcType=VARCHAR}");
        SET("PAYBATSTATUS = #{record.paybatstatus,jdbcType=CHAR}");
        SET("MOUNTCHANGENO = #{record.mountchangeno,jdbcType=VARCHAR}");
        SET("MOUNTCHANGESTATUS = #{record.mountchangestatus,jdbcType=CHAR}");
        SET("SETTLEBATNO = #{record.settlebatno,jdbcType=VARCHAR}");
        SET("SETTLEBATSTATUS = #{record.settlebatstatus,jdbcType=CHAR}");
        SET("USERID = #{record.userid,jdbcType=VARCHAR}");
        SET("TRADE_TYPE = #{record.tradeType,jdbcType=VARCHAR}");
        SET("BUYBATDATE = #{record.buybatdate,jdbcType=CHAR}");
        SET("PAYCARD = #{record.paycard,jdbcType=VARCHAR}");
        SET("PAYDATE = #{record.paydate,jdbcType=CHAR}");
        SET("TRADE_CODE = #{record.tradeCode,jdbcType=VARCHAR}");
        SET("IS_REF = #{record.isRef,jdbcType=CHAR}");
        SET("PAYBATDATE = #{record.paybatdate,jdbcType=CHAR}");
        SET("PRODUCTID = #{record.productid,jdbcType=VARCHAR}");
        SET("PRODUCTNAME = #{record.productname,jdbcType=VARCHAR}");
        SET("PRODUCTDESC = #{record.productdesc,jdbcType=VARCHAR}");
        SET("SHOWURL = #{record.showurl,jdbcType=VARCHAR}");
        SET("ISRESPONSE = #{record.isresponse,jdbcType=CHAR}");
        SET("RCVTIME = #{record.rcvtime,jdbcType=VARCHAR}");
        SET("RCVDATE = #{record.rcvdate,jdbcType=VARCHAR}");
        SET("TMSMP = #{record.tmsmp,jdbcType=VARCHAR}");
        SET("INVOICENO = #{record.invoiceno,jdbcType=VARCHAR}");
        
        BMerchantOrderExample example = (BMerchantOrderExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_MERCHANT_ORDER
     *
     * @mbggenerated Wed Jun 15 16:50:27 CST 2016
     */
    public String updateByPrimaryKeySelective(BMerchantOrder record) {
        BEGIN();
        UPDATE("B_MERCHANT_ORDER");
        
        if (record.getPayjnlno() != null) {
            SET("PAYJNLNO = #{payjnlno,jdbcType=VARCHAR}");
        }
        
        if (record.getPaytime() != null) {
            SET("PAYTIME = #{paytime,jdbcType=CHAR}");
        }
        
        if (record.getOrdertime() != null) {
            SET("ORDERTIME = #{ordertime,jdbcType=CHAR}");
        }
        
        if (record.getClientip() != null) {
            SET("CLIENTIP = #{clientip,jdbcType=VARCHAR}");
        }
        
        if (record.getPurchaserid() != null) {
            SET("PURCHASERID = #{purchaserid,jdbcType=VARCHAR}");
        }
        
        if (record.getValidunit() != null) {
            SET("VALIDUNIT = #{validunit,jdbcType=VARCHAR}");
        }
        
        if (record.getValidnum() != null) {
            SET("VALIDNUM = #{validnum,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderdesc() != null) {
            SET("ORDERDESC = #{orderdesc,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderamount() != null) {
            SET("ORDERAMOUNT = #{orderamount,jdbcType=DECIMAL}");
        }
        
        if (record.getCurrency() != null) {
            SET("CURRENCY = #{currency,jdbcType=VARCHAR}");
        }
        
        if (record.getMerchantpoundage() != null) {
            SET("MERCHANTPOUNDAGE = #{merchantpoundage,jdbcType=DECIMAL}");
        }
        
        if (record.getPurchaseamount() != null) {
            SET("PURCHASEAMOUNT = #{purchaseamount,jdbcType=DECIMAL}");
        }
        
        if (record.getChannel() != null) {
            SET("CHANNEL = #{channel,jdbcType=VARCHAR}");
        }
        
        if (record.getAcceptancerate() != null) {
            SET("ACCEPTANCERATE = #{acceptancerate,jdbcType=DECIMAL}");
        }
        
        if (record.getAcceptancemount() != null) {
            SET("ACCEPTANCEMOUNT = #{acceptancemount,jdbcType=DECIMAL}");
        }
        
        if (record.getAcceptancycurrency() != null) {
            SET("ACCEPTANCYCURRENCY = #{acceptancycurrency,jdbcType=VARCHAR}");
        }
        
        if (record.getAcceptancypoundage() != null) {
            SET("ACCEPTANCYPOUNDAGE = #{acceptancypoundage,jdbcType=DECIMAL}");
        }
        
        if (record.getOrderstatus() != null) {
            SET("ORDERSTATUS = #{orderstatus,jdbcType=VARCHAR}");
        }
        
        if (record.getPagereturnurl() != null) {
            SET("PAGERETURNURL = #{pagereturnurl,jdbcType=VARCHAR}");
        }
        
        if (record.getOfflinenotifyurl() != null) {
            SET("OFFLINENOTIFYURL = #{offlinenotifyurl,jdbcType=VARCHAR}");
        }
        
        if (record.getPayorderid() != null) {
            SET("PAYORDERID = #{payorderid,jdbcType=VARCHAR}");
        }
        
        if (record.getBuybatno() != null) {
            SET("BUYBATNO = #{buybatno,jdbcType=VARCHAR}");
        }
        
        if (record.getBuybatstatus() != null) {
            SET("BUYBATSTATUS = #{buybatstatus,jdbcType=CHAR}");
        }
        
        if (record.getBuybatrate() != null) {
            SET("BUYBATRATE = #{buybatrate,jdbcType=DECIMAL}");
        }
        
        if (record.getUpordownmount() != null) {
            SET("UPORDOWNMOUNT = #{upordownmount,jdbcType=DECIMAL}");
        }
        
        if (record.getPaybatno() != null) {
            SET("PAYBATNO = #{paybatno,jdbcType=VARCHAR}");
        }
        
        if (record.getPaybatstatus() != null) {
            SET("PAYBATSTATUS = #{paybatstatus,jdbcType=CHAR}");
        }
        
        if (record.getMountchangeno() != null) {
            SET("MOUNTCHANGENO = #{mountchangeno,jdbcType=VARCHAR}");
        }
        
        if (record.getMountchangestatus() != null) {
            SET("MOUNTCHANGESTATUS = #{mountchangestatus,jdbcType=CHAR}");
        }
        
        if (record.getSettlebatno() != null) {
            SET("SETTLEBATNO = #{settlebatno,jdbcType=VARCHAR}");
        }
        
        if (record.getSettlebatstatus() != null) {
            SET("SETTLEBATSTATUS = #{settlebatstatus,jdbcType=CHAR}");
        }
        
        if (record.getUserid() != null) {
            SET("USERID = #{userid,jdbcType=VARCHAR}");
        }
        
        if (record.getTradeType() != null) {
            SET("TRADE_TYPE = #{tradeType,jdbcType=VARCHAR}");
        }
        
        if (record.getBuybatdate() != null) {
            SET("BUYBATDATE = #{buybatdate,jdbcType=CHAR}");
        }
        
        if (record.getPaycard() != null) {
            SET("PAYCARD = #{paycard,jdbcType=VARCHAR}");
        }
        
        if (record.getPaydate() != null) {
            SET("PAYDATE = #{paydate,jdbcType=CHAR}");
        }
        
        if (record.getTradeCode() != null) {
            SET("TRADE_CODE = #{tradeCode,jdbcType=VARCHAR}");
        }
        
        if (record.getIsRef() != null) {
            SET("IS_REF = #{isRef,jdbcType=CHAR}");
        }
        
        if (record.getPaybatdate() != null) {
            SET("PAYBATDATE = #{paybatdate,jdbcType=CHAR}");
        }
        
        if (record.getProductid() != null) {
            SET("PRODUCTID = #{productid,jdbcType=VARCHAR}");
        }
        
        if (record.getProductname() != null) {
            SET("PRODUCTNAME = #{productname,jdbcType=VARCHAR}");
        }
        
        if (record.getProductdesc() != null) {
            SET("PRODUCTDESC = #{productdesc,jdbcType=VARCHAR}");
        }
        
        if (record.getShowurl() != null) {
            SET("SHOWURL = #{showurl,jdbcType=VARCHAR}");
        }
        
        if (record.getIsresponse() != null) {
            SET("ISRESPONSE = #{isresponse,jdbcType=CHAR}");
        }
        
        if (record.getRcvtime() != null) {
            SET("RCVTIME = #{rcvtime,jdbcType=VARCHAR}");
        }
        
        if (record.getRcvdate() != null) {
            SET("RCVDATE = #{rcvdate,jdbcType=VARCHAR}");
        }
        
        if (record.getTmsmp() != null) {
            SET("TMSMP = #{tmsmp,jdbcType=VARCHAR}");
        }
        
        if (record.getInvoiceno() != null) {
            SET("INVOICENO = #{invoiceno,jdbcType=VARCHAR}");
        }
        
        WHERE("MERCHANTID = #{merchantid,jdbcType=VARCHAR}");
        WHERE("ORDERID = #{orderid,jdbcType=VARCHAR}");
        WHERE("ORDERDATE = #{orderdate,jdbcType=CHAR}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table B_MERCHANT_ORDER
     *
     * @mbggenerated Wed Jun 15 16:50:27 CST 2016
     */
    protected void applyWhere(BMerchantOrderExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}