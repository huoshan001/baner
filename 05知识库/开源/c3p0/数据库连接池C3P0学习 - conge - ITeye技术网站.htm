<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0039)http://haoran-10.iteye.com/blog/1753332 -->
<HTML dir=ltr xml:lang="zh-CN" 
xmlns="http://www.w3.org/1999/xhtml"><HEAD><TITLE>数据库连接池C3P0学习 - conge - ITeye技术网站</TITLE>
<META content="text/html; charset=UTF-8" http-equiv=Content-Type>
<META name=description 
content=" 数据库连接池C3P0框架是个非常优异的开源jar，高性能的管理着数据源，这里只讨论程序本身负责数据源，不讨论容器管理。  &nbsp;  一、实现方式：  C3P0有三种方式实现：  1.自己动手写代码，实现数据源  例如：在类路径下配置一个属性文件,config.properties，内容如下：  driverClass=xxx  jdbcUrl=xxx  user=xxx  password=xxx   ...">
<META name=keywords content="C3P0, 数据库连接池, java 数据库连接池C3P0学习"><LINK 
rel="shortcut icon" type=image/x-icon href="/images/favicon.ico"><LINK 
title=ITeye rel=search type=application/opensearchdescription+xml 
href="/open_search.xml"><LINK title=conge rel=alternate type=application/rss+xml 
href="/rss"><LINK rel=stylesheet type=text/css 
href="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/blog.css" 
media=screen><LINK rel=stylesheet type=text/css 
href="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/blue.css" media=screen>
<SCRIPT type=text/javascript 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/application.js"></SCRIPT>

<SCRIPT type=text/javascript>

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-535605-1']);
  _gaq.push(['_setDomainName', 'iteye.com']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</SCRIPT>
<LINK rel=stylesheet type=text/css 
href="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/SyntaxHighlighter.css" 
media=screen>
<SCRIPT type=text/javascript 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/shCoreCommon.js"></SCRIPT>

<SCRIPT type=text/javascript 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/hotkey.js"></SCRIPT>

<SCRIPT type=text/javascript 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/code_favorites.js"></SCRIPT>

<SCRIPT type=text/javascript 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/weiboshare.js"></SCRIPT>

<META name=GENERATOR content="MSHTML 8.00.7601.17622"></HEAD>
<BODY>
<DIV id=header>
<DIV id=blog_site_nav><A class=homepage href="http://www.iteye.com/">首页</A> <A 
href="http://www.iteye.com/news">资讯</A> <A 
href="http://www.iteye.com/magazines">精华</A> <A 
href="http://www.iteye.com/forums">论坛</A> <A 
href="http://www.iteye.com/ask">问答</A> <A 
href="http://www.iteye.com/blogs">博客</A> <A 
href="http://www.iteye.com/blogs/subjects">专栏</A> <A 
href="http://www.iteye.com/groups">群组</A> <A id=msna onclick="return false;" 
href="http://haoran-10.iteye.com/blog/1753332#"><U>更多</U> <SMALL>▼</SMALL></A> 
<DIV style="DISPLAY: none" class=quick_menu><A href="http://job.iteye.com/iteye" 
target=_blank>招聘</A> <A href="http://www.iteye.com/search">搜索</A> </DIV></DIV>
<DIV id=user_nav><A class=welcome title=登录 
href="http://haoran-10.iteye.com/login">您还未登录 !</A> <A 
href="http://haoran-10.iteye.com/login">登录</A> <A class=nobg 
href="http://haoran-10.iteye.com/signup">注册</A> </DIV></DIV>
<DIV id=page>
<DIV id=branding class=clearfix>
<DIV id=blog_name>
<H1><A href="http://haoran-10.iteye.com/">conge</A></H1></DIV>
<DIV id=fd></DIV>
<DIV id=blog_navbar>
<UL>
  <LI class=blog_navbar_for><A 
  href="http://haoran-10.iteye.com/"><STRONG>博客</STRONG></A></LI>
  <LI><A href="http://haoran-10.iteye.com/weibo">微博</A></LI>
  <LI><A href="http://haoran-10.iteye.com/album">相册</A></LI>
  <LI><A href="http://haoran-10.iteye.com/link">收藏</A></LI>
  <LI><A href="http://haoran-10.iteye.com/blog/guest_book">留言</A></LI>
  <LI><A href="http://haoran-10.iteye.com/blog/profile">关于我</A></LI></UL>
<DIV class=search>
<FORM method=get action=/blog/search><INPUT 
style="WIDTH: 110px; MARGIN-LEFT: 10px" id=query class=search_text type=text 
name=query> <INPUT class=submit_search type=submit> </FORM></DIV>
<DIV id=fd></DIV></DIV></DIV>
<DIV id=content class=clearfix>
<DIV id=main>
<DIV style="DISPLAY: none" class=h-entry><A class=p-author 
href="http://haoran-10.iteye.com/" target=_blank>haoran_10</A> </DIV>
<DIV class=blog_main>
<DIV class=blog_title>
<H3><A href="http://haoran-10.iteye.com/blog/1753332">数据库连接池C3P0学习</A> <EM 
class=actions></EM></H3>
<UL class=blog_categories><STRONG>博客分类：</STRONG> 
  <LI><A href="http://haoran-10.iteye.com/category/211864">java</A></LI></UL>
<DIV class=news_tag><A href="http://www.iteye.com/blogs/tag/C3P0">C3P0</A><A 
href="http://www.iteye.com/blogs/tag/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0">数据库连接池</A><A 
href="http://www.iteye.com/blogs/tag/java">java</A>&nbsp;</DIV></DIV>
<DIV id=blog_content class=blog_content>
<DIV style="FONT-SIZE: 14px" class=iteye-blog-content-contain>
<P>数据库连接池C3P0框架是个非常优异的开源jar，高性能的管理着数据源，这里只讨论程序本身负责数据源，不讨论容器管理。</P>
<P>&nbsp;</P>
<P><SPAN style="FONT-SIZE: small"><STRONG>一、实现方式：</STRONG></SPAN></P>
<P>C3P0有三种方式实现：</P>
<P>1.自己动手写代码，实现数据源</P>
<P>例如：在类路径下配置一个属性文件,config.properties，内容如下：</P>
<P>driverClass=xxx</P>
<P>jdbcUrl=xxx</P>
<P>user=xxx</P>
<P>password=xxx</P>
<P>...</P>
<P>&nbsp;</P>
<P>然后代码中实现</P>
<P>&nbsp;</P>
<P>Properties props = new Properties();</P>
<P>InputStream in = Thread.class.getResourceAsStream("config.properties");</P>
<P>props.load(in);</P>
<P>in.close();</P>
<P>&nbsp;</P>
<P>ComboPooledDataSource cpds = new ComboPooledDataSource();</P>
<P>cpds.setDriverClass(props.getProperty("driverClass"));</P>
<P>cpds.setJdbcUrl(props.getProperty("jdbcUrl"));</P>
<P>cpds.setUser(props.getProperty("user"));</P>
<P>cpds.setPassword(props.getProperty("password"));</P>
<P>...</P>
<P>这里实现了一个数据源。</P>
<P>&nbsp;</P>
<P>也可以这样配置，在类路径下配置一个xml文件，config.xml</P>
<P>&nbsp;</P>
<P>&lt;config&gt;</P>
<P>&lt;source name="source1"&gt;</P>
<P>&lt;property name="user"&gt;root&lt;/property&gt;</P>
<P>&lt;property name="password"&gt;xxx&lt;/property&gt;</P>
<P>&lt;property name="url"&gt;xxx&lt;/property&gt;</P>
<P>&lt;property name="driverClass"&gt;xxx&lt;/property&gt;</P>
<P>&lt;/source&gt;</P>
<P>&nbsp;</P>
<P>&lt;source name="source2"&gt;</P>
<P>...</P>
<P>&lt;/source&gt;</P>
<P>&lt;/config&gt;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>然后自己解析xml文件，这样可以实现多个数据源的配置</P>
<P>&nbsp;</P>
<P>2.配置默认的熟悉文件</P>
<P><SPAN>类路径下提供一个c3p0.properties文件(不能改名)</SPAN></P>
<P>配置如下：</P>
<P>&nbsp;</P>
<P>c3p0.driverClass=com.mysql.jdbc.Driver</P>
<P>c3p0.jdbcUrl=jdbc:mysql://localhost:3306/jdbc</P>
<P>c3p0.user=root</P>
<P>c3p0.password=java</P>
<DIV>...</DIV>
<DIV>&nbsp;</DIV>
<DIV><SPAN>上面只提供了最基本的配置项，其他配置项参照&nbsp;</SPAN><A 
href="http://www.mchange.com/projects/c3p0/index.html#c3p0-config.xml" 
target=_blank>文档</A><SPAN>配置，记得是c3p0.后面加属性名就是了，最后初始化数据源的方式就是这样简单：</SPAN> </DIV>
<DIV>...</DIV>
<DIV>DataSource &nbsp;ds = new ComboPooledDataSource();</DIV>
<DIV>return ds;</DIV>
<DIV>...</DIV>
<DIV>然后就可以使用数据源了，C3P0会对c3p0.properties进行自动解析的</DIV>
<DIV>&nbsp;</DIV>
<DIV>3.<SPAN>路径下提供一个c3p0-config.xml文件&nbsp;</SPAN><SPAN>&nbsp;</SPAN> </DIV>
<P>&nbsp;</P>
<P><SPAN>这种方式使用方式与第二种差不多，但是有更多的优点&nbsp;</SPAN><BR><SPAN>(1).更直观明显，很类似hibernate和spring的配置</SPAN><BR><SPAN>(2).可以为多个数据源服务，提供default-config和named-config两种配置方式&nbsp;</SPAN></P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&lt;c3p0-config&gt;</P>
<P>&nbsp; &lt;default-config&gt; &nbsp;&nbsp;</P>
<P>&nbsp; &nbsp; &lt;property name="user"&gt;root&lt;/property&gt;</P>
<P>&nbsp; &nbsp; &lt;property name="password"&gt;java&lt;/property&gt;</P>
<P>&nbsp; &nbsp; &lt;property 
name="driverClass"&gt;com.mysql.jdbc.Driver&lt;/property&gt;</P>
<P>&nbsp; &nbsp; &lt;property 
name="jdbcUrl"&gt;jdbc:mysql://localhost:3306/jdbc&lt;/property&gt;</P>
<P>&nbsp;</P>
<P>&nbsp; &nbsp; &lt;property name="initialPoolSize"&gt;10&lt;/property&gt;</P>
<P>&nbsp; &nbsp; &lt;property name="maxIdleTime"&gt;30&lt;/property&gt;</P>
<P>&nbsp; &nbsp; &lt;property name="maxPoolSize"&gt;100&lt;/property&gt;</P>
<P>&nbsp; &nbsp; &lt;property name="minPoolSize"&gt;10&lt;/property&gt;</P>
<P>&nbsp; &lt;/default-config&gt;</P>
<P>&nbsp;</P>
<P>&nbsp; &lt;named-config name="mySource"&gt;</P>
<P>&nbsp; &nbsp; &lt;property name="user"&gt;root&lt;/property&gt;</P>
<P>&nbsp; &nbsp; &lt;property name="password"&gt;java&lt;/property&gt;</P>
<P>&nbsp; &nbsp; &lt;property 
name="driverClass"&gt;com.mysql.jdbc.Driver&lt;/property&gt;</P>
<P>&nbsp; &nbsp; &lt;property 
name="jdbcUrl"&gt;jdbc:mysql://localhost:3306/jdbc&lt;/property&gt;</P>
<P>&nbsp;</P>
<P>&nbsp; &nbsp; &lt;property name="initialPoolSize"&gt;10&lt;/property&gt;</P>
<P>&nbsp; &nbsp; &lt;property name="maxIdleTime"&gt;30&lt;/property&gt;</P>
<P>&nbsp; &nbsp; &lt;property name="maxPoolSize"&gt;100&lt;/property&gt;</P>
<P>&nbsp; &nbsp; &lt;property name="minPoolSize"&gt;10&lt;/property&gt;</P>
<P>&nbsp; &lt;/named-config&gt;</P>
<P>&lt;/c3p0-config&gt;</P>
<P>&nbsp;</P>
<P>...</P>
<P>DataSource &nbsp;ds = new ComboPooledDataSource("mySource");</P>
<P>return ds;</P>
<P>...</P>
<P>这样就可以使用数据源了。</P>
<P>&nbsp;</P>
<P><STRONG><SPAN style="FONT-SIZE: small">二、部分参数配置说明：</SPAN></STRONG></P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>1.最常用配置</P>
<P>initialPoolSize:连接池初始化时创建的连接数,default : 3（建议使用）</P>
<P>minPoolSize:连接池保持的最小连接数,default : 3（建议使用）</P>
<P>maxPoolSize:连接池中拥有的最大连接数，如果获得新连接时会使连接总数超过这个值则不会再获取新连接，而是等待其他连接释放，所以这个值有可能会设计地很大,default 
: 15（建议使用）</P>
<P>acquireIncrement:连接池在无空闲连接可用时一次性创建的新数据库连接数,default : 3（建议使用）</P>
<P>&nbsp;</P>
<P>2.管理连接池的大小和连接的生存时间</P>
<P>maxConnectionAge:配置连接的生存时间，超过这个时间的连接将由连接池自动断开丢弃掉。当然正在使用的连接不会马上断开，而是等待它close再断开。配置为0的时候则不会对连接的生存时间进行限制。default 
: 0 单位 s（不建议使用）</P>
<P>maxIdleTime:连接的最大空闲时间，如果超过这个时间，某个数据库连接还没有被使用，则会断开掉这个连接。如果为0，则永远不会断开连接,即回收此连接。default 
: 0 单位 s（建议使用）</P>
<P>maxIdleTimeExcessConnections:这个配置主要是为了快速减轻连接池的负载，比如连接池中连接数因为某次数据访问高峰导致创建了很多数据连接，但是后面的时间段需要的数据库连接数很少，需要快速释放，必须小于maxIdleTime。其实这个没必要配置，maxIdleTime已经配置了。default 
: 0 单位 s（不建议使用）</P>
<P>&nbsp;</P>
<P>3.配置连接测试：</P>
<P>automaticTestTable:配置一个表名，连接池根据这个表名用自己的测试sql语句在这个空表上测试数据库连接,这个表只能由c3p0来使用，用户不能操作。default 
: null（不建议使用）</P>
<P>preferredTestQuery:与上面的automaticTestTable二者只能选一。自己实现一条SQL检测语句。default : 
null（建议使用）</P>
<P>idleConnectionTestPeriod:用来配置测试空闲连接的间隔时间。测试方式还是上面的两种之一，可以用来解决MySQL8小时断开连接的问题。因为它保证连接池会每隔一定时间对空闲连接进行一次测试，从而保证有效的空闲连接能每隔一定时间访问一次数据库，将于MySQL8小时无会话的状态打破。为0则不测试。default 
: 0(建议使用)</P>
<P>testConnectionOnCheckin:如果为true，则在close的时候测试连接的有效性。default : false（不建议使用）</P>
<P>testConnectionOnCheckout:性能消耗大。如果为true，在每次getConnection的时候都会测试，为了提高性能,尽量不要用。default 
: false（不建议使用）</P>
<P>&nbsp;</P>
<P>4.配置PreparedStatement缓存：</P>
<P>maxStatements:连接池为数据源缓存的PreparedStatement的总数。由于PreparedStatement属于单个Connection,所以这个数量应该根据应用中平均连接数乘以每个连接的平均PreparedStatement来计算。同时maxStatementsPerConnection的配置无效。default 
: 0（不建议使用）</P>
<P>maxStatementsPerConnection:连接池为数据源单个Connection缓存的PreparedStatement数，这个配置比maxStatements更有意义，因为它缓存的服务对象是单个数据连接，如果设置的好，肯定是可以提高性能的。为0的时候不缓存。default 
: 0（看情况而论）</P>
<P>&nbsp;</P>
<P>5.重连相关配置&nbsp;</P>
<P>acquireRetryAttempts:连接池在获得新连接失败时重试的次数，如果小于等于0则无限重试直至连接获得成功。default : 
30（建议使用）</P>
<P>acquireRetryDelay:连接池在获得新连接时的间隔时间。default : 1000 单位ms（建议使用）</P>
<P>breakAfterAcquireFailure:如果为true，则当连接获取失败时自动关闭数据源，除非重新启动应用程序。所以一般不用。default : 
false（不建议使用）</P>
<P>checkoutTimeout:配置当连接池所有连接用完时应用程序getConnection的等待时间。为0则无限等待直至有其他连接释放或者创建新的连接，不为0则当时间到的时候如果仍没有获得连接，则会抛出SQLException。其实就是acquireRetryAttempts*acquireRetryDelay。default 
: 0（与上面两个，有重复，选择其中两个都行）</P>
<P>&nbsp;</P>
<P>6.定制管理Connection的生命周期</P>
<P>connectionCustomizerClassName:用来定制Connection的管理，比如在Connection acquire 
的时候设定Connection的隔离级别，或者在Connection丢弃的时候进行资源关闭，</P>
<P>就可以通过继承一个AbstractConnectionCustomizer来实现相关方法，配置的时候使用全类名。有点类似监听器的作用。default : 
null（不建议使用）</P>
<P>&nbsp;</P>
<P>7.配置未提交的事务处理&nbsp;</P>
<P>autoCommitOnClose:连接池在回收数据库连接时是否自动提交事务。如果为false，则会回滚未提交的事务，如果为true，则会自动提交事务。default 
: false（不建议使用）</P>
<P>forceIgnoreUnresolvedTransactions：这个配置强烈不建议为true。default : false（不建议使用）</P>
<P>一般来说事务当然由自己关闭了，为什么要让连接池来处理这种不细心问题呢？</P>
<P>&nbsp;</P>
<P>8.配置debug和回收Connection</P>
<P>unreturnedConnectionTimeout:为0的时候要求所有的Connection在应用程序中必须关闭。如果不为0，则强制在设定的时间到达后回收Connection，所以必须小心设置，保证在回收之前所有数据库操作都能够完成。这种限制减少Connection未关闭情况的不是很适用。建议手动关闭。default 
: 0 单位 s（不建议使用）</P>
<P>debugUnreturnedConnectionStackTraces:如果为true并且unreturnedConnectionTimeout设为大于0的值，当所有被getConnection出去的连接unreturnedConnectionTimeout时间到的时候，就会打印出堆栈信息。只能在debug模式下适用，因为打印堆栈信息会减慢getConnection的速度default 
: false（不建议使用）</P>
<P>&nbsp;</P>
<P>其他配置项：因为有些配置项几乎没有自己配置的必要，使用默认值就好，所以没有再写出来。</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P><SPAN style="FONT-SIZE: small"><STRONG><SPAN 
style="FONT-SIZE: small">三、示例：</SPAN></STRONG></SPAN></P>
<P>示例采用第二种方式：</P>
<P>1.c3p0.properties:</P>
<P>&nbsp;</P><PRE class=java name="code">#驱动
c3p0.driverClass=com.mysql.jdbc.Driver
#地址
c3p0.jdbcUrl=jdbc:mysql://localhost:3306/jdbc
#用户名
c3p0.user=root
#密码
c3p0.password=lovejava
#-------------------------------
#连接池初始化时创建的连接数
c3p0.initialPoolSize=3
#连接池保持的最小连接数
c3p0.minPoolSize=3
#连接池在无空闲连接可用时一次性创建的新数据库连接数,default:3
c3p0.acquireIncrement=3
#连接池中拥有的最大连接数，如果获得新连接时会使连接总数超过这个值则不会再获取新连接，而是等待其他连接释放，所以这个值有可能会设计地很大,default : 15
c3p0.maxPoolSize=15
#连接的最大空闲时间，如果超过这个时间，某个数据库连接还没有被使用，则会断开掉这个连接,单位秒
c3p0.maxIdleTime=100
#连接池在获得新连接失败时重试的次数，如果小于等于0则无限重试直至连接获得成功
c3p0.acquireRetryAttempts=30
#连接池在获得新连接时的间隔时间
c3p0.acquireRetryDelay=1000</PRE>
<P>&nbsp;</P>
<P>&nbsp;2.ConnectionPool</P>
<P>&nbsp;</P><PRE class=java name="code">package com.study.pool;

import java.sql.Connection;
import java.sql.SQLException;

import javax.sql.DataSource;

import com.mchange.v2.c3p0.ComboPooledDataSource;

public class ConnectionPool {
	private DataSource ds;
	private static ConnectionPool pool;
	private ConnectionPool(){
		ds = new ComboPooledDataSource();
	}
	public static final ConnectionPool getInstance(){
		if(pool==null){
			try{
				pool = new ConnectionPool();
			}catch (Exception e) {
				e.printStackTrace();
			}
		}
		return pool;
	}
	public synchronized final Connection getConnection() {  
		try {
			return ds.getConnection();
		} catch (SQLException e) {     
			e.printStackTrace();
		}
		return null;
	}
	
}</PRE>
<P>&nbsp;</P>
<P>&nbsp;3.PoolThread</P>
<P>&nbsp;</P><PRE class=java name="code">package com.study.pool;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class PoolThread extends Thread {
	@Override
	public void run(){
		ConnectionPool pool = ConnectionPool.getInstance();
		Connection con = null;
		PreparedStatement stmt= null;
		ResultSet rs = null;
		try{
			con = pool.getConnection();
			stmt = con.prepareStatement("select sysdate as nowtime from dual");
			rs = stmt.executeQuery();
			while(rs.next()){
				System.out.println(Thread.currentThread().getId()+"---------------开始"+rs.getString("nowtime"));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}finally{
			try {
				rs.close();
				stmt.close();
				con.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		System.out.println(Thread.currentThread().getId()+"--------结束");
	}
}
</PRE>
<P>&nbsp;</P>
<P>&nbsp;4.PoolMain</P>
<P>&nbsp;</P><PRE class=java name="code">package com.study.pool;

public class PoolMain {

	/**
	 * 数据源缓冲池 实例练习
	 */
	public static void main(String[] args) {
		System.out.println("缓冲池模拟开始");
		PoolThread[] threads = new PoolThread[50];
		for(int i=0;i&lt;threads.length;i++){
			threads[i] = new PoolThread();
		}
		for(int i=0;i&lt;threads.length;i++){
			threads[i].start();
		}
	}

}
</PRE>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P></DIV></DIV><IFRAME height=90 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/794.htm" frameBorder=0 
width=680 scrolling=no></IFRAME>
<DIV id=bottoms class=clearfix>
<DIV id=digg_bottom class=clearfix>
<DIV class=digged><STRONG>7</STRONG> <BR>顶</DIV>
<DIV class=digged><STRONG>1</STRONG> <BR>踩</DIV></DIV>
<DIV id=share_weibo>分享到： <A title=分享到新浪微博 href="javascript:;" 
data-type="sina"><IMG 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/sina.jpg"></A> <A 
title=分享到腾讯微博 href="javascript:;" data-type="qq"><IMG 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/tec.jpg"></A> </DIV></DIV>
<DIV class=blog_nav>
<DIV class=pre_next><A class=next title=Comparable 
href="http://haoran-10.iteye.com/blog/1940382">Comparable</A> | <A class=pre 
title="spring aop 注解入门" href="http://haoran-10.iteye.com/blog/1725636">spring 
aop 注解入门</A> </DIV></DIV>
<DIV class=blog_bottom>
<UL>
  <LI>2012-12-24 18:03</LI>
  <LI>浏览 27184</LI>
  <LI><A href="http://haoran-10.iteye.com/blog/1753332#comments">评论(0)</A></LI>
  <LI>分类:<A href="http://www.iteye.com/blogs/category/language">编程语言</A></LI>
  <LI class=last><A class=more href="http://www.iteye.com/wiki/blog/1753332" 
  target=_blank>相关推荐</A></LI></UL></DIV>
<DIV class=blog_comment>
<H5>评论</H5><A id=comments name=comments></A></DIV>
<DIV class=blog_comment>
<H5>发表评论</H5>
<P style="TEXT-ALIGN: center; MARGIN-TOP: 30px; MARGIN-BOTTOM: 0px"><A 
style="BACKGROUND-COLOR: white" href="http://haoran-10.iteye.com/login"><IMG 
style="VERTICAL-ALIGN: middle; MARGIN-RIGHT: 10px" 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/login_icon.png"></A><A 
href="http://haoran-10.iteye.com/login"> 您还没有登录,请您登录后再发表评论 </A></P></DIV></DIV>
<SCRIPT type=text/javascript>
  dp.SyntaxHighlighter.HighlightAll('code', true, true);

  $$('#main .blog_content pre[name=code]').each(function(pre, index){ // blog content
    var post_id = 1753332;
    var location = window.location;
    source_url = location.protocol + "//" + location.host + location.pathname + location.search;
    pre.writeAttribute('codeable_id', post_id);
    pre.writeAttribute('codeable_type', "Blog");
    pre.writeAttribute('source_url', source_url);
    pre.writeAttribute('pre_index', index);
    pre.writeAttribute('title', '数据库连接池C3P0学习');
  });

  fix_image_size($$('div.blog_content img'), 700);

  function processComment() {
    $$('#main .blog_comment > div').each(function(comment){// comment
      var post_id = comment.id.substr(2);
      $$("#"+comment.id+" pre[name=code]").each(function(pre, index){
        var location = window.location;
        source_url = location.protocol + "//" + location.host + location.pathname + location.search;
        source_url += "#" + comment.id;
        pre.writeAttribute('codeable_id', post_id);
        pre.writeAttribute('codeable_type', "BlogComment");
        pre.writeAttribute('source_url', source_url);
        pre.writeAttribute('pre_index', index);
        pre.writeAttribute('title', '数据库连接池C3P0学习');
      });
    });
  }

  function quote_comment(id) {
    new Ajax.Request('/editor/quote', {
      parameters: {'id':id, 'type':'BlogComment'},
      onSuccess:function(response){editor.bbcode_editor.textarea.insertAfterSelection(response.responseText);
        Element.scrollTo(editor.bbcode_editor.textarea.element);}
    });
  }

  code_favorites_init();
  processComment();
  new WeiboShare({share_buttons: $('share_weibo'), img_scope: $('blog_content')});
</SCRIPT>
</DIV>
<DIV id=local>
<DIV class=local_top></DIV>
<DIV id=blog_owner>
<DIV id=blog_owner_logo><A href="http://haoran-10.iteye.com/"><IMG class=logo 
title="haoran_10的博客: conge" alt=haoran_10的博客 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/88adfd76-22fe-3b14-8547-8321ea902d63.jpg" 
width=1></A></DIV>
<DIV id=blog_owner_name>haoran_10</DIV></DIV>
<DIV id=blog_actions>
<UL>
  <LI>浏览: 134846 次</LI>
  <LI>性别: <IMG title=男 alt=Icon_minigender_1 
  src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/icon_minigender_1.gif"></LI>
  <LI>来自: 上海</LI>
  <LI><IMG 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/offline.gif"></LI></UL></DIV>
<DIV id=user_visits class=clearfix>
<H5>最近访客 <SPAN 
style="PADDING-LEFT: 30px; FONT-SIZE: 12px; FONT-WEIGHT: normal"><A 
href="http://haoran-10.iteye.com/blog/user_visits">更多访客&gt;&gt;</A></SPAN></H5>
<DIV class=user_visit>
<DIV class=logo><A href="http://wang7783165.iteye.com/" target=_blank><IMG 
class=logo title="wang7783165的博客: wang7783165" alt=wang7783165的博客 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/user-logo-thumb.gif" 
width=48></A></DIV>
<DIV class=left><A title=wang7783165 href="http://wang7783165.iteye.com/" 
target=_blank>wang7783165</A></DIV></DIV>
<DIV class=user_visit>
<DIV class=logo><A href="http://wind-running.iteye.com/" target=_blank><IMG 
class=logo title="wind_running的博客: " alt=wind_running的博客 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/user-logo-thumb.gif" 
width=48></A></DIV>
<DIV class=left><A title=wind_running href="http://wind-running.iteye.com/" 
target=_blank>wind_running</A></DIV></DIV>
<DIV class=user_visit>
<DIV class=logo><A href="http://liss17.iteye.com/" target=_blank><IMG class=logo 
title="liss17的博客: " alt=liss17的博客 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/user-logo-thumb.gif" 
width=48></A></DIV>
<DIV class=left><A title=liss17 href="http://liss17.iteye.com/" 
target=_blank>liss17</A></DIV></DIV>
<DIV class=user_visit>
<DIV class=logo><A href="http://nj-first.iteye.com/" target=_blank><IMG 
class=logo title="nj_first的博客: nj_first" alt=nj_first的博客 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/user-logo-thumb.gif" 
width=48></A></DIV>
<DIV class=left><A title=nj_first href="http://nj-first.iteye.com/" 
target=_blank>nj_first</A></DIV></DIV></DIV>
<DIV id=blog_menu>
<H5>文章分类</H5>
<UL>
  <LI><A href="http://haoran-10.iteye.com/">全部博客 (68)</A></LI>
  <LI><A href="http://haoran-10.iteye.com/category/211864">java (33)</A></LI>
  <LI><A href="http://haoran-10.iteye.com/category/345918">javaEE (7)</A></LI>
  <LI><A href="http://haoran-10.iteye.com/category/345929">Nginx&amp;Tomcat 
  (3)</A></LI>
  <LI><A href="http://haoran-10.iteye.com/category/345925">框架 (1)</A></LI>
  <LI><A href="http://haoran-10.iteye.com/category/345920">Redis (11)</A></LI>
  <LI><A href="http://haoran-10.iteye.com/category/350597">MySQL (0)</A></LI>
  <LI><A href="http://haoran-10.iteye.com/category/345928">ActiveMQ (7)</A></LI>
  <LI><A href="http://haoran-10.iteye.com/category/345926">搜索 (0)</A></LI>
  <LI><A href="http://haoran-10.iteye.com/category/345930">设计与架构 (0)</A></LI>
  <LI><A href="http://haoran-10.iteye.com/category/350148">多线程 (0)</A></LI>
  <LI><A href="http://haoran-10.iteye.com/category/350149">数据结构&amp;算法 
  (7)</A></LI>
  <LI><A href="http://haoran-10.iteye.com/category/350150">设计模式 (0)</A></LI>
  <LI><A href="http://haoran-10.iteye.com/category/345923">工具 (0)</A></LI>
  <LI><A href="http://haoran-10.iteye.com/category/345927">前端 
(0)</A></LI></UL></DIV>
<DIV id=month_blogs>
<H5>社区版块</H5>
<UL>
  <LI><A href="http://haoran-10.iteye.com/blog/news">我的资讯</A> (0)</LI>
  <LI><A href="http://haoran-10.iteye.com/blog/post">我的论坛</A> (0) </LI>
  <LI><A href="http://haoran-10.iteye.com/blog/answered_problems">我的问答</A> 
  (2)</LI></UL></DIV>
<DIV id=month_blogs>
<H5>存档分类</H5>
<UL>
  <LI><A href="http://haoran-10.iteye.com/blog/monthblog/2015-12">2015-12</A> 
  (20)</LI>
  <LI><A href="http://haoran-10.iteye.com/blog/monthblog/2015-11">2015-11</A> 
  (7)</LI>
  <LI><A href="http://haoran-10.iteye.com/blog/monthblog/2015-10">2015-10</A> 
  (1)</LI>
  <LI><A 
href="http://haoran-10.iteye.com/blog/monthblog_more">更多存档...</A></LI></UL></DIV>
<DIV id=comments_top>
<H5>评论排行榜</H5>
<UL>
  <LI><A title=" 排序算法（4）--归并排序 " 
  href="http://haoran-10.iteye.com/blog/2267215">排序算法（4）--归并排序 </A></LI>
  <LI><A title="java servlet拾遗（2）-请求转发、包含、重定向" 
  href="http://haoran-10.iteye.com/blog/2245045">java servlet拾遗（2）-请求转发、包含、 
  ...</A></LI></UL></DIV>
<DIV id=guest_books>
<H5>最新评论</H5>
<UL>
  <LI><A title=haoran_10 href="http://haoran-10.iteye.com/" 
  target=_blank>haoran_10</A>： yybing110 写道这种算法 适用于什么情况呢？ 归并过程 ...<BR><A 
  href="http://haoran-10.iteye.com/blog/2267215#bc2383334">排序算法（4）--归并排序 
  </A></LI>
  <LI><A title=yybing110 href="http://yybing110.iteye.com/" 
  target=_blank>yybing110</A>： 这种算法 适用于什么情况呢？ <BR><A 
  href="http://haoran-10.iteye.com/blog/2267215#bc2383333">排序算法（4）--归并排序 
  </A></LI>
  <LI><A title=gang.chen href="http://gang-chen.iteye.com/" 
  target=_blank>gang.chen</A>： 顶一个&nbsp;&nbsp;<BR><A 
  href="http://haoran-10.iteye.com/blog/2245045#bc2378367">java 
  servlet拾遗（2）-请求转发、包含、重定向</A> </LI></UL></DIV>
<DIV class=local_bottom></DIV></DIV></DIV>
<DIV id=footer class=clearfix>
<DIV id=copyright>
<HR>
声明：ITeye文章版权属于作者，受法律保护。没有作者书面许可不得转载。若作者同意转载，必须以超链接形式标明文章原始出处和作者。<BR>© 2003-2015 
ITeye.com. All rights reserved. [ 京ICP证110151号 京公网安备110105010620 ] 
</DIV></DIV></DIV>
<SCRIPT type=text/javascript>
  document.write("<img src='http://stat.iteye.com/?url="+ encodeURIComponent(document.location.href) + "&referrer=" + encodeURIComponent(document.referrer) + "&user_id=' width='0' height='0' />");
</SCRIPT>

<SCRIPT type=text/javascript 
src="数据库连接池C3P0学习%20-%20conge%20-%20ITeye技术网站_files/tracking.js"></SCRIPT>
</BODY></HTML>
